{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from  sklearn.preprocessing import MinMaxScaler\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow.keras as k\n",
    "# from tsfresh import extract_features"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "source": [
    "lembrar depois de manipular os outliers e "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2142004_58910000.csv</th>\n",
       "      <th>2245055_58030000.csv</th>\n",
       "      <th>2141005_58880001.csv</th>\n",
       "      <th>2244001_58235100.csv</th>\n",
       "      <th>2244041_58305001.csv</th>\n",
       "      <th>2142001_58770000.csv</th>\n",
       "      <th>2143019_58500000.csv</th>\n",
       "      <th>2245032_58204000.csv</th>\n",
       "      <th>2242029_58645000.csv</th>\n",
       "      <th>2244010_58220000.csv</th>\n",
       "      <th>...</th>\n",
       "      <th>2345067_58060000.csv</th>\n",
       "      <th>2143000_58710000.csv</th>\n",
       "      <th>2242027_58420000.csv</th>\n",
       "      <th>2142002_58920000.csv</th>\n",
       "      <th>2245007_58218000.csv</th>\n",
       "      <th>2143020_58470000.csv</th>\n",
       "      <th>2143021_58520000.csv</th>\n",
       "      <th>2142014_58648001.csv</th>\n",
       "      <th>2243005_58560000.csv</th>\n",
       "      <th>2143001_58730001.csv</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Data</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1943-04-21</th>\n",
       "      <td>4.47</td>\n",
       "      <td>12.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>160.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>156.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>125.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.196</td>\n",
       "      <td>...</td>\n",
       "      <td>6.012</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>145.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943-04-22</th>\n",
       "      <td>4.10</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>160.4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>153.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.196</td>\n",
       "      <td>...</td>\n",
       "      <td>6.012</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>141.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943-04-23</th>\n",
       "      <td>3.95</td>\n",
       "      <td>11.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>155.2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>122.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.110</td>\n",
       "      <td>...</td>\n",
       "      <td>5.640</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.5</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943-04-24</th>\n",
       "      <td>3.80</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>142.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.024</td>\n",
       "      <td>...</td>\n",
       "      <td>5.640</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>137.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943-04-25</th>\n",
       "      <td>3.80</td>\n",
       "      <td>10.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>148.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>138.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.024</td>\n",
       "      <td>...</td>\n",
       "      <td>5.478</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>135.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            2142004_58910000.csv  2245055_58030000.csv  2141005_58880001.csv  \\\n",
       "Data                                                                           \n",
       "1943-04-21                  4.47                  12.2                   0.0   \n",
       "1943-04-22                  4.10                  12.0                   0.0   \n",
       "1943-04-23                  3.95                  11.5                   0.0   \n",
       "1943-04-24                  3.80                  11.0                   0.0   \n",
       "1943-04-25                  3.80                  10.7                   0.0   \n",
       "\n",
       "            2244001_58235100.csv  2244041_58305001.csv  2142001_58770000.csv  \\\n",
       "Data                                                                           \n",
       "1943-04-21                 160.4                   0.0                 156.0   \n",
       "1943-04-22                 160.4                   0.0                 153.0   \n",
       "1943-04-23                 155.2                   0.0                 150.0   \n",
       "1943-04-24                 150.0                   0.0                 142.0   \n",
       "1943-04-25                 148.0                   0.0                 138.0   \n",
       "\n",
       "            2143019_58500000.csv  2245032_58204000.csv  2242029_58645000.csv  \\\n",
       "Data                                                                           \n",
       "1943-04-21                   0.0                 125.0                   0.0   \n",
       "1943-04-22                   0.0                 123.0                   0.0   \n",
       "1943-04-23                   0.0                 122.0                   0.0   \n",
       "1943-04-24                   0.0                 120.0                   0.0   \n",
       "1943-04-25                   0.0                 117.0                   0.0   \n",
       "\n",
       "            2244010_58220000.csv          ...           2345067_58060000.csv  \\\n",
       "Data                                      ...                                  \n",
       "1943-04-21                 3.196          ...                          6.012   \n",
       "1943-04-22                 3.196          ...                          6.012   \n",
       "1943-04-23                 3.110          ...                          5.640   \n",
       "1943-04-24                 3.024          ...                          5.640   \n",
       "1943-04-25                 3.024          ...                          5.478   \n",
       "\n",
       "            2143000_58710000.csv  2242027_58420000.csv  2142002_58920000.csv  \\\n",
       "Data                                                                           \n",
       "1943-04-21                   0.0                  18.4                   0.0   \n",
       "1943-04-22                   0.0                  19.7                   0.0   \n",
       "1943-04-23                   0.0                  17.5                   0.0   \n",
       "1943-04-24                   0.0                  15.7                   0.0   \n",
       "1943-04-25                   0.0                  15.1                   0.0   \n",
       "\n",
       "            2245007_58218000.csv  2143020_58470000.csv  2143021_58520000.csv  \\\n",
       "Data                                                                           \n",
       "1943-04-21                 145.0                   0.0                   0.0   \n",
       "1943-04-22                 141.0                   0.0                   0.0   \n",
       "1943-04-23                 140.0                   0.0                   0.0   \n",
       "1943-04-24                 137.0                   0.0                   0.0   \n",
       "1943-04-25                 135.0                   0.0                   0.0   \n",
       "\n",
       "            2142014_58648001.csv  2243005_58560000.csv  2143001_58730001.csv  \n",
       "Data                                                                          \n",
       "1943-04-21                   0.0                   0.0                   0.0  \n",
       "1943-04-22                   0.0                   0.0                   0.0  \n",
       "1943-04-23                   0.0                   0.0                   0.0  \n",
       "1943-04-24                   0.0                   0.0                   0.0  \n",
       "1943-04-25                   0.0                   0.0                   0.0  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "BaseDados = pd.read_csv('../instancia/BaseParaibaDoSulPreProcessadas-EstacoesUnidas.csv',\n",
    "                        index_col='Data')\n",
    "BaseDados.head()\n",
    "# BaseDados = BaseDados.iloc[:,:1]\n",
    "# BaseDados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def normalizaBase(dataset, tamanhoConjTeste):\n",
    "    dataset = np.array(dataset).reshape(-1, 1)\n",
    "    normalizer = MinMaxScaler(feature_range=(0.1, 0.9))\n",
    "    normalizer.fit(dataset[:-tamanhoConjTeste])\n",
    "#     normalizer.transform(dataset).T\n",
    "    \n",
    "    return normalizer.transform(dataset)\n",
    "# BaseDados = normalizaBase(BaseDados, )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def rolling_window(a, window, step_size):\n",
    "    \"\"\"\n",
    "    # Reshape a numpy array 'a' of shape (n, x) to form shape((n - window_size), window_size, x))\n",
    "    link https://gist.github.com/codehacken/708f19ae746784cef6e68b037af65788\n",
    "    \"\"\"\n",
    "    a = np.array(a)\n",
    "    shape = a.shape[:-1] + (a.shape[-1] - window + 1 - step_size, window)\n",
    "    strides = a.strides + (a.strides[-1] * step_size,)\n",
    "    x = np.lib.stride_tricks.as_strided(a, shape=shape, strides=strides).reshape((-1, 1, window))\n",
    "    y = np.array(a[window:])\n",
    "    return x, y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def divideTodasEstacoesEmTreinoDevTest(BaseDados, ordem):\n",
    "    '''\n",
    "    divide a base em conjuntos de treino, teste e validacao, x e y por estacao\n",
    "    e retorna um Dicionario com cadaa\n",
    "    '''\n",
    "    estacoesDivididasEJaneladas = dict()\n",
    "    \n",
    "    for nomeEstacao in BaseDados:\n",
    "        # carrega base e retirar os 0.0 da base\n",
    "        serieEstacao = BaseDados[nomeEstacao]\n",
    "        serieEstacao = serieEstacao[serieEstacao != 0.0]\n",
    "\n",
    "        # calcula o tamanho dos conjuntos com 15%, 10% e 75%\n",
    "        tamanhoBase = len(serieEstacao)\n",
    "        tamanhoConjTeste = int(np.ceil(len(serieEstacao)*0.15))\n",
    "        tamanhoConjValidacao = int(np.ceil(len(serieEstacao)*0.10))\n",
    "        tamanhoConjTreino = tamanhoBase - (tamanhoConjValidacao+ tamanhoConjTeste)\n",
    "        tamanhoConjTeste = int(np.ceil(len(serieEstacao)*0.15))\n",
    "        print(tamanhoConjTreino, tamanhoConjValidacao, tamanhoConjTeste)\n",
    "        \n",
    "        # normaliza a base de dados \n",
    "        serieEstacao = normalizaBase(serieEstacao, tamanhoConjTeste)\n",
    "        \n",
    "        # transforma novamente a serie em flatten\n",
    "        serieEstacao = serieEstacao.flatten()\n",
    "        \n",
    "        # retorna as janelas com ordem definida\n",
    "        print(serieEstacao)\n",
    "        estacaoJanelada = rolling_window(serieEstacao, ordem, 1)\n",
    "        \n",
    "        # dicionario para colocar os y e x do teste treino e val\n",
    "        estacoesDivididasEJaneladas[nomeEstacao] = dict()\n",
    "        estacoesDivididasEJaneladas[nomeEstacao]['teste_x'] = estacaoJanelada[0][\n",
    "            -tamanhoConjTeste:]\n",
    "        estacoesDivididasEJaneladas[nomeEstacao]['teste_y'] = estacaoJanelada[1][\n",
    "            -tamanhoConjTeste:]\n",
    "        \n",
    "        estacoesDivididasEJaneladas[nomeEstacao]['validacao_x'] = estacaoJanelada[0][\n",
    "            -(tamanhoConjTeste + tamanhoConjValidacao):-tamanhoConjTeste]\n",
    "        estacoesDivididasEJaneladas[nomeEstacao]['validacao_y'] = estacaoJanelada[1][\n",
    "            -(tamanhoConjTeste + tamanhoConjValidacao):-tamanhoConjTeste]\n",
    "        \n",
    "        estacoesDivididasEJaneladas[nomeEstacao]['treino_x'] = estacaoJanelada[0][\n",
    "            :-(tamanhoConjTeste + tamanhoConjValidacao)]\n",
    "        estacoesDivididasEJaneladas[nomeEstacao]['treino_y'] = estacaoJanelada[1][\n",
    "            :-(tamanhoConjTeste + tamanhoConjValidacao)]\n",
    "    # retorna um dicionario com [estacao][conjunto]\n",
    "    return estacoesDivididasEJaneladas\n",
    "#         TamanhoBase - (tamanhoConjTreino + tamanhoConjValidacao + tamanhoConjTeste)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# estacoesDivididasEmTreinoDevTeste = divideTodasEstacoesEmTreinoDevTest(BaseDados)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## dividir em teste e Treino"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [],
   "source": [
    "def treinaModeloLstm(x_treino, y_treino, x_validacao, y_validacao, nomeEstacao, ordem):\n",
    "    model = k.models.Sequential()\n",
    "#     model.add(k.layers.Conv1D(10, 3, input_shape=(None, 45),))\n",
    "    model.add(k.layers.LSTM(100,  return_sequences=False, input_shape=(None, ordem)))\n",
    "    model.add(k.layers.Dense(1))\n",
    "    model.compile(optimizer='adam',\n",
    "                  loss='mse', metrics=['mape'])\n",
    "    save = k.callbacks.ModelCheckpoint('../model/modeloLstmEstacao_'+nomeEstacao,\n",
    "                                       monitor='val_loss', verbose=0, save_best_only=True,\n",
    "                                       save_weights_only=False, mode='auto', period=1)\n",
    "    history = model.fit(x_treino, \n",
    "              y_treino, \n",
    "              validation_data=[x_validacao, y_validacao], \n",
    "              epochs=50, \n",
    "              batch_size=128,\n",
    "              callbacks=[save], verbose=0\n",
    "             )\n",
    "    return model, history\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def graficoMape(mapesDict):\n",
    "    import seaborn as sns\n",
    "    import matplotlib.pyplot as plt\n",
    "    plt.figure(figsize=[16,9])\n",
    "    nomeEstacoes = list()\n",
    "    mapes= list()\n",
    "    [ (nomeEstacoes.append(nomeEstacao), mapes.append(valorMape)) for nomeEstacao, valorMape in mapesDict.items()]\n",
    "    \n",
    "    figure = sns.barplot(np.arange(len(mapes)), mapes, )\n",
    "    plt.grid(b=True, axis='y')\n",
    "    plt.xlabel('EstaÃ§Ãµes de mediÃ§Ã£o')\n",
    "    plt.ylabel('Mape(%)')\n",
    "    plt.ylim([0, 20])\n",
    "    plt.xticks(np.arange(len(mapes)), nomeEstacoes, rotation= 30)\n",
    "#     plt.legend()\n",
    "    return figure\n",
    "#     plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mape(predict, target):\n",
    "    return np.mean(np.abs(target - predict)/target)*100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def executaModelosNasEstacoes(BaseDados):\n",
    "    # divide os conjuntos\n",
    "    estacoesEConjuntos = divideTodasEstacoesEmTreinoDevTest(BaseDados, 10)\n",
    "    \n",
    "    # treina modelo em todas as estacoes\n",
    "    for nomeEstacao in estacoesEConjuntos.keys():\n",
    "        print(nomeEstacao)\n",
    "        model, hist = treinaModeloLstm(\n",
    "            estacoesEConjuntos[nomeEstacao]['treino_x'], \n",
    "            estacoesEConjuntos[nomeEstacao]['treino_y'],\n",
    "            estacoesEConjuntos[nomeEstacao]['validacao_x'],\n",
    "            estacoesEConjuntos[nomeEstacao]['validacao_y'],\n",
    "            nomeEstacao, 10\n",
    "        )\n",
    "        \n",
    "    mapes = list()\n",
    "    for nomeEstacao in estacoesEConjuntos.keys():\n",
    "        model = k.models.load_model('../model/modeloLstmEstacao_'+nomeEstacao)\n",
    "        predict = model.predict(np.array(estacoesEConjuntos[nomeEstacao]['teste_x']))\n",
    "        mapes.append(mape(predict.flatten(), estacoesEConjuntos[nomeEstacao]['teste_y'].flatten()))\n",
    "    \n",
    "    graficoMape(mapes)\n",
    "    plt.savefig('../graficos/resultadoMapesTodasSeriesIndependentes.pdf')\n",
    "    plt.show()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#executaModelosNasEstacoes(BaseDados)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [],
   "source": [
    "def somenteExecutaModelosNasEstacoes(BaseDados):\n",
    "    # divide os conjuntos\n",
    "    estacoesEConjuntos = divideTodasEstacoesEmTreinoDevTest(BaseDados, 10)\n",
    "    \n",
    "    # treina modelo em todas as estacoes\n",
    "#     for nomeEstacao in estacoesEConjuntos.keys():\n",
    "#         print(nomeEstacao)\n",
    "#         model, hist = treinaModeloLstm(\n",
    "#             estacoesEConjuntos[nomeEstacao]['treino_x'], \n",
    "#             estacoesEConjuntos[nomeEstacao]['treino_y'],\n",
    "#             estacoesEConjuntos[nomeEstacao]['validacao_x'],\n",
    "#             estacoesEConjuntos[nomeEstacao]['validacao_y'],\n",
    "#             nomeEstacao, 10\n",
    "#         )\n",
    "        \n",
    "    mapes = dict()\n",
    "    for nomeEstacao in estacoesEConjuntos.keys():\n",
    "        print(nomeEstacao)\n",
    "        model = k.models.load_model('../model/modeloLstmEstacao_'+nomeEstacao)\n",
    "        predict = model.predict(np.array(estacoesEConjuntos[nomeEstacao]['teste_x']))\n",
    "        mapes[nomeEstacao] = mape(predict.flatten(), estacoesEConjuntos[nomeEstacao]['teste_y'].flatten())\n",
    "    \n",
    "    print(mapes)\n",
    "    graficoMape(mapes)\n",
    "    plt.savefig('../graficos/resultadoMapesTodasSeriesIndependentes.pdf')\n",
    "    plt.show()\n",
    "    return mapes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18510 2468 3702\n",
      "[0.22309952 0.21222916 0.20782225 ... 0.15866177 0.14745648 0.13898347]\n",
      "18094 2413 3620\n",
      "[0.16918101 0.16758881 0.16360832 ... 0.14407603 0.14028978 0.14112409]\n",
      "7980 1065 1597\n",
      "[0.23094982 0.27333621 0.27437002 ... 0.12530686 0.13168708 0.13481933]\n",
      "14908 1988 2982\n",
      "[0.15890294 0.15890294 0.15586731 ... 0.10729702 0.10729702 0.11958199]\n",
      "16481 2198 3297\n",
      "[0.14380374 0.17228654 0.26188867 ... 0.2153041  0.20705003 0.15835264]\n",
      "16642 2219 3329\n",
      "[0.2060374  0.20381078 0.20158416 ... 0.11754343 0.126817   0.13226695]\n",
      "12810 1708 2562\n",
      "[0.30311631 0.24493839 0.19057202 ... 0.1149971  0.1149971  0.1149971 ]\n",
      "14273 1904 2855\n",
      "[0.17728045 0.17501416 0.17388102 ... 0.15965518 0.15965518 0.15802686]\n",
      "14912 1989 2983\n",
      "[0.12066146 0.12560013 0.14640732 ... 0.10857143 0.13786666 0.12512245]\n",
      "17925 2390 3585\n",
      "[0.13265413 0.13265413 0.13152903 ... 0.14351267 0.14507997 0.16919379]\n",
      "10111 1349 2023\n",
      "[0.17439616 0.167376   0.15977082 ... 0.10227213 0.10137683 0.10323173]\n",
      "14319 1910 2864\n",
      "[0.12802353 0.21190605 0.14886251 ... 0.1172166  0.11758148 0.11870317]\n",
      "8814 1176 1763\n",
      "[0.18970032 0.17702877 0.22164692 ... 0.12984263 0.13794918 0.14204911]\n",
      "7672 1023 1535\n",
      "[0.16473913 0.22036113 0.3526513  ... 0.13675562 0.13581644 0.14542927]\n",
      "18217 2429 3644\n",
      "[0.13874545 0.13647653 0.13572022 ... 0.12247073 0.12447985 0.1247374 ]\n",
      "10455 1394 2091\n",
      "[0.20046016 0.19222572 0.19096634 ... 0.1092415  0.11204519 0.11244063]\n",
      "8107 1081 1622\n",
      "[0.18135978 0.17427958 0.17191951 ... 0.10529484 0.11167587 0.13700971]\n",
      "18343 2446 3669\n",
      "[0.17457146 0.17457146 0.17165027 ... 0.12669188 0.12229192 0.10898996]\n",
      "13443 1793 2689\n",
      "[0.17282653 0.17064283 0.16955098 ... 0.28027448 0.28572039 0.29400391]\n",
      "14340 1913 2869\n",
      "[0.18768793 0.167653   0.15743602 ... 0.13795328 0.14070799 0.14263584]\n",
      "10387 1386 2078\n",
      "[0.13290514 0.13231461 0.13231461 ... 0.12606152 0.12543818 0.12543818]\n",
      "15554 2075 3112\n",
      "[0.19073388 0.18776872 0.18776872 ... 0.1485702  0.1542709  0.15774885]\n",
      "18067 2409 3614\n",
      "[0.2345348  0.25277386 0.23818261 ... 0.10814946 0.10471904 0.10471904]\n",
      "10399 1387 2081\n",
      "[0.10528684 0.11664792 0.1367829  ... 0.12333003 0.11214691 0.10578819]\n",
      "17961 2395 3593\n",
      "[0.19909101 0.19755777 0.19755777 ... 0.15825923 0.1252486  0.18825813]\n",
      "11683 1558 2337\n",
      "[0.18830743 0.18660575 0.18757814 ... 0.16354994 0.1646254  0.20535923]\n",
      "15292 2040 3059\n",
      "[0.21491789 0.22653414 0.20363354 ... 0.11760899 0.11718347 0.10754697]\n",
      "18175 2424 3636\n",
      "[0.13204092 0.13752112 0.1332283  ... 0.12719551 0.14817939 0.13882075]\n",
      "17941 2393 3589\n",
      "[0.16825918 0.16725537 0.16625156 ... 0.11832056 0.12248939 0.1178622 ]\n",
      "15948 2127 3190\n",
      "[0.15988568 0.15706679 0.15456112 ... 0.10260496 0.12384872 0.12736293]\n",
      "14370 1916 2874\n",
      "[0.12857432 0.12667475 0.12117813 ... 0.1199709  0.12389371 0.12309023]\n",
      "13002 1734 2601\n",
      "[0.11310914 0.11259539 0.11105415 ... 0.1105267  0.11562308 0.14540506]\n",
      "13349 1780 2670\n",
      "[0.11839016 0.12160561 0.12321334 ... 0.11429355 0.11714233 0.12095462]\n",
      "8744 1167 1750\n",
      "[0.12853941 0.12853941 0.13866206 ... 0.11446215 0.11329126 0.1121449 ]\n",
      "14792 1973 2959\n",
      "[0.11176503 0.11607773 0.14859546 ... 0.10208622 0.10408343 0.10558839]\n",
      "18450 2460 3690\n",
      "[0.10536673 0.10536673 0.10483885 ... 0.10477372 0.10534573 0.10534573]\n",
      "8733 1165 1747\n",
      "[0.17542338 0.16785086 0.23851144 ... 0.14744736 0.14864296 0.17841762]\n",
      "16411 2189 3283\n",
      "[0.15281026 0.15673331 0.1500943  ... 0.12426496 0.12642746 0.1294974 ]\n",
      "18373 2450 3675\n",
      "[0.17100233 0.17100233 0.16913242 ... 0.11253706 0.11829078 0.11660438]\n",
      "14317 1909 2864\n",
      "[0.19029029 0.18628629 0.18528529 ... 0.19465726 0.21428238 0.22203233]\n",
      "16223 2164 3245\n",
      "[0.19679715 0.1873452  0.22241993 ... 0.13927004 0.13927004 0.13927004]\n",
      "15101 2014 3021\n",
      "[0.1309313  0.13467302 0.13242799 ... 0.12083808 0.12236551 0.12671408]\n",
      "11532 1538 2307\n",
      "[0.32117032 0.2297051  0.19764165 ... 0.15017289 0.14844855 0.14731114]\n",
      "16761 2235 3353\n",
      "[0.14353357 0.14221437 0.14466431 ... 0.10189965 0.10271567 0.10385206]\n",
      "16455 2195 3292\n",
      "[0.14508689 0.14508689 0.14638623 ... 0.13888335 0.1524406  0.16376612]\n",
      "2142004_58910000.csv\n",
      "2245055_58030000.csv\n",
      "2141005_58880001.csv\n",
      "2244001_58235100.csv\n",
      "2244041_58305001.csv\n",
      "2142001_58770000.csv\n",
      "2143019_58500000.csv\n",
      "2245032_58204000.csv\n",
      "2242029_58645000.csv\n",
      "2244010_58220000.csv\n",
      "2141004_58940000.csv\n",
      "2243014_58434000.csv\n",
      "2141007_58795000.csv\n",
      "2345065_58040000.csv\n",
      "2244035_58542000.csv\n",
      "2141002_58974000.csv\n",
      "2142008_58658000.csv\n",
      "2141006_58874000.csv\n",
      "2142022_58857000.csv\n",
      "2244047_58525000.csv\n",
      "2244044_58270000.csv\n",
      "2244042_58300000.csv\n",
      "2242028_58630002.csv\n",
      "2243003_58380001.csv\n",
      "2143018_58755000.csv\n",
      "2142006_58765001.csv\n",
      "2345071_58099000.csv\n",
      "2243015_58440000.csv\n",
      "2245048_58183000.csv\n",
      "2042000_58930000.csv\n",
      "2243012_58405000.csv\n",
      "2042014_58916000.csv\n",
      "2243016_58425000.csv\n",
      "2142007_58670002.csv\n",
      "2141003_58960000.csv\n",
      "2345067_58060000.csv\n",
      "2143000_58710000.csv\n",
      "2242027_58420000.csv\n",
      "2142002_58920000.csv\n",
      "2245007_58218000.csv\n",
      "2143020_58470000.csv\n",
      "2143021_58520000.csv\n",
      "2142014_58648001.csv\n",
      "2243005_58560000.csv\n",
      "2143001_58730001.csv\n",
      "{'2142004_58910000.csv': 8.448740085014935, '2245055_58030000.csv': 5.32176449105499, '2141005_58880001.csv': 4.618023830081263, '2244001_58235100.csv': 4.821697634935839, '2244041_58305001.csv': 5.417122834785552, '2142001_58770000.csv': 6.429633846145968, '2143019_58500000.csv': 10.175464320295188, '2245032_58204000.csv': 4.893498291877989, '2242029_58645000.csv': 6.0412155593037715, '2244010_58220000.csv': 8.482042169895543, '2141004_58940000.csv': 5.331715171237972, '2243014_58434000.csv': 5.903831421596871, '2141007_58795000.csv': 6.980868807869305, '2345065_58040000.csv': 8.87767494876521, '2244035_58542000.csv': 3.3980228377490413, '2141002_58974000.csv': 3.746209846270617, '2142008_58658000.csv': 5.362180732825447, '2141006_58874000.csv': 5.50863196072169, '2142022_58857000.csv': 3.9035518185036566, '2244047_58525000.csv': 3.4534067244997613, '2244044_58270000.csv': 6.252212878933514, '2244042_58300000.csv': 4.7650727107389885, '2242028_58630002.csv': 4.1788481226245855, '2243003_58380001.csv': 6.356317753660182, '2143018_58755000.csv': 6.448206776412242, '2142006_58765001.csv': 6.200353728722309, '2345071_58099000.csv': 2.6705643219802564, '2243015_58440000.csv': 5.121220312805589, '2245048_58183000.csv': 5.327241598781953, '2042000_58930000.csv': 4.404577972070736, '2243012_58405000.csv': 8.52031723608508, '2042014_58916000.csv': 6.230339878452574, '2243016_58425000.csv': 7.004348395343307, '2142007_58670002.csv': 6.801897946705357, '2141003_58960000.csv': 5.448483583696061, '2345067_58060000.csv': 2.0814611350028347, '2143000_58710000.csv': 6.7604063321623595, '2242027_58420000.csv': 6.211490974412361, '2142002_58920000.csv': 5.788453787709251, '2245007_58218000.csv': 5.319134566219546, '2143020_58470000.csv': 2.502650644790011, '2143021_58520000.csv': 5.533093721196289, '2142014_58648001.csv': 3.1533378469783893, '2243005_58560000.csv': 7.04760657560016, '2143001_58730001.csv': 6.586347206231857}\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "dictMapes = somenteExecutaModelosNasEstacoes(BaseDados)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "graficoMape(dictMapes)\n",
    "plt.savefig('../graficos/resultadoMapesTodasSeriesIndependentes.pdf')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "TensorFlow-GPU",
   "language": "python",
   "name": "tf-gpu"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
